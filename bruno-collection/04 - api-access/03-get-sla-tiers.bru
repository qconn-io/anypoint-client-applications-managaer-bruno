meta {
  name: Get Available SLA Tiers
  type: http
  seq: 3
}

get {
  url: {{url}}/apimanager/api/v1/organizations/{{organization_id}}/environments/{{environment_id}}/apis/{{api_instance_id}}/tiers
  body: none
  auth: bearer
}

auth:bearer {
  token: {{access_token}}
}

script:post-response {
  if (res.status === 200) {
    const tiers = res.getBody();
    console.log(`Found ${tiers.total} SLA tiers:`);
    
    tiers.tiers.forEach((tier, index) => {
      console.log(`${index + 1}. ${tier.name} (ID: ${tier.id})`);
      console.log(`   Description: ${tier.description || 'No description'}`);
      console.log(`   Limits: ${JSON.stringify(tier.limits)}`);
      console.log(`   Status: ${tier.status}`);
      console.log(`   Auto-approve: ${tier.autoApprove}`);
      
      // Store first tier for contract creation
      if (index === 0) {
        bru.setEnvVar("sla_tier_id", tier.id);
      }
    });
    
  } else {
    console.error("Failed to get SLA tiers:", res.status, res.getBody());
  }
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Should return array of SLA tiers", function() {
    const body = res.getBody();
    expect(body).to.be.an('array');
  });
  
  test("Tiers should have required properties", function() {
    const body = res.getBody();
    if (body.length > 0) {
      expect(body[0]).to.have.property('id');
      expect(body[0]).to.have.property('name');
    }
  });
}

docs {
  # Get Available SLA Tiers
  
  Retrieves SLA (Service Level Agreement) tiers available for a specific API.
  SLA tiers define rate limits and access policies for API consumers.
  
  ## Prerequisites
  - Valid API instance ID
  - API must have SLA tiers configured
  
  ## Response
  - Array of SLA tier objects
  - Each tier includes limits, approval settings, and status
  - Tier ID is required for contract creation
  
  ## SLA Tier Properties
  - `id`: Unique tier identifier
  - `name`: Human-readable tier name
  - `limits`: Rate limiting configuration
  - `autoApprove`: Whether contracts are auto-approved
  - `status`: Tier availability status
  
  ## Post-Response Actions
  - Stores first SLA tier ID for contract creation
  - Displays tier details for selection
}